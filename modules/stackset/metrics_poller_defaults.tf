locals {
  metricspoller_default_interval = "5m"
  metricspoller_default_filters = {
    "AWS/SageMaker/Endpoints" = [
      "CPUUtilization",
      "DiskUtilization",
      "GPUMemoryUtilization",
      "GPUUtilization",
      "LoadedModelCount",
      "MemoryReservation",
      "MemoryUtilization",
    ]
    "AWS/SageMaker/InferenceComponents" = [
    ]
    "AWS/SageMaker/InferenceRecommendationsJobs" = [
    ]
    "AWS/SageMaker/ProcessingJobs" = [
      "CPUUtilization",
      "DiskUtilization",
      "GPUMemoryUtilization",
      "GPUUtilization",
      "MemoryUtilization",
    ]
    "AWS/SageMaker/TrainingJobs" = [
      "CPUUtilization",
      "DiskUtilization",
      "GPUMemoryUtilization",
      "GPUUtilization",
      "MemoryUtilization",
    ]
    "AWS/SageMaker/TransformJobs" = [
      "CPUUtilization",
      "DiskUtilization",
      "GPUMemoryUtilization",
      "GPUUtilization",
      "MemoryUtilization",
    ]
    "AWS/ACMPrivateCA" = [
    ]
    "AWS/AmazonMQ" = [
      "AckRate",
      "BurstBalance",
      "ChannelCount",
      "ConfirmRate",
      "ConnectionCount",
      "ConsumerCount",
      "CpuCreditBalance",
      "CpuUtilization",
      "CurrentConnectionsCount",
      "DequeueCount",
      "DispatchCount",
      "EnqueueCount",
      "EnqueueTime",
      "EstablishedConnectionsCount",
      "ExchangeCount",
      "ExpiredCount",
      "HeapUsage",
      "InFlightCount",
      "InactiveDurableTopicSubscribersCount",
      "JobSchedulerStorePercentUsage",
      "JournalFilesForFastRecovery",
      "JournalFilesForFullRecovery",
      "MemoryUsage",
      "MessageCount",
      "MessageReadyCount",
      "MessageUnacknowledgedCount",
      "NetworkIn",
      "NetworkOut",
      "OpenTransactionCount",
      "ProducerCount",
      "PublishRate",
      "QueueCount",
      "QueueSize",
      "RabbitMQDiskFree",
      "RabbitMQDiskFreeLimit",
      "RabbitMQFdUsed",
      "RabbitMQMemLimit",
      "RabbitMQMemUsed",
      "ReceiveCount",
      "StorePercentUsage",
      "SystemCpuUtilization",
      "TempPercentUsage",
      "TotalConsumerCount",
      "TotalMessageCount",
      "TotalProducerCount",
      "VolumeReadOps",
      "VolumeWriteOps",
      "WsMaximumConnections",
      "AmqpMaximumConnections",
      "MqttMaximumConnections",
    ]
    "AWS/AmplifyHosting" = [
    ]
    "AWS/ApiGateway" = [
      "4XXError",
      "4xx",
      "5XXError",
      "5xx",
      "CacheHitCount",
      "CacheMissCount",
      "ClientError",
      "ConnectCount",
      "Count",
      "ExecutionError",
      "IntegrationError",
      "IntegrationLatency",
      "Latency",
      "MessageCount",
    ]
    "AWS/AppFlow" = [
    ]
    "AWS/AppRunner" = [
      "2xxStatusResponses",
      "4xxStatusResponses",
      "5xxStatusResponses",
      "ActiveInstances",
      "CPUUtilization",
      "MemoryUtilization",
      "RequestLatency",
      "Requests",
    ]
    "AWS/AppStream" = [
      "ActualCapacity",
      "AvailableCapacity",
      "CapacityUtilization",
      "DesiredCapacity",
      "InUseCapacity",
      "InsufficientCapacityError",
      "PendingCapacity",
      "RunningCapacity",
      "ActiveUserSessionCapacity",
      "ActualUserSessionCapacity",
      "AvailableUserSessionCapacity",
      "CpuUtilizationInstance",
      "CpuUtilizationSession",
      "DesiredUserSessionCapacity",
      "DiskUtilizationInstance",
      "InsufficientConcurrencyLimitError",
      "MemoryUtilizationInstance",
      "MemoryUtilizationSession",
      "PagingFileUtilizationInstance",
      "PendingUserSessionCapacity",
      "RunningUserSessionCapacity",
    ]
    "AWS/AppSync" = [
      "4XXError",
      "5XXError",
      "ActiveConnections",
      "ActiveSubscriptions",
      "ConnectClientError",
      "ConnectServerError",
      "ConnectSuccess",
      "ConnectionDuration",
      "DisconnectClientError",
      "DisconnectServerError",
      "DisconnectSuccess",
      "Latency",
      "PublishDataMessageClientError",
      "PublishDataMessageServerError",
      "PublishDataMessageSize",
      "PublishDataMessageSuccess",
      "SubscribeClientError",
      "SubscribeServerError",
      "SubscribeSuccess",
      "UnsubscribeClientError",
      "UnsubscribeServerError",
      "UnsubscribeSuccess",
      "TokensConsumed",
      "Requests",
    ]
    "AWS/ApplicationELB" = [
      "ActiveConnectionCount",
      "ClientTLSNegotiationErrorCount",
      "ConsumedLCUs",
      "DesyncMitigationMode_NonCompliant_Request_Count",
      "ELBAuthError",
      "ELBAuthFailure",
      "ELBAuthLatency",
      "ELBAuthRefreshTokenSuccess",
      "ELBAuthSuccess",
      "ELBAuthUserClaimsSizeExceeded",
      "GrpcRequestCount",
      "HTTPCode_ELB_3XX_Count",
      "HTTPCode_ELB_4XX_Count",
      "HTTPCode_ELB_500_Count",
      "HTTPCode_ELB_502_Count",
      "HTTPCode_ELB_503_Count",
      "HTTPCode_ELB_504_Count",
      "HTTPCode_ELB_5XX_Count",
      "HTTPCode_Target_2XX_Count",
      "HTTPCode_Target_3XX_Count",
      "HTTPCode_Target_4XX_Count",
      "HTTPCode_Target_5XX_Count",
      "HTTP_Fixed_Response_Count",
      "HTTP_Redirect_Count",
      "HTTP_Redirect_Url_Limit_Exceeded_Count",
      "HealthyHostCount",
      "IPv6ProcessedBytes",
      "IPv6RequestCount",
      "LambdaInternalError",
      "LambdaTargetProcessedBytes",
      "LambdaUserError",
      "NewConnectionCount",
      "NonStickyRequestCount",
      "ProcessedBytes",
      "RejectedConnectionCount",
      "RequestCount",
      "RequestCountPerTarget",
      "RuleEvaluations",
      "TargetConnectionErrorCount",
      "TargetResponseTime",
      "TargetTLSNegotiationErrorCount",
      "UnHealthyHostCount",
    ]
    "AWS/Athena" = [
      "EngineExecutionTime",
      "ProcessedBytes",
      "QueryPlanningTime",
      "QueryQueueTime",
      "ServiceProcessingTime",
      "TotalExecutionTime",
    ]
    "AWS/AutoScaling" = [
      "GroupDesiredCapacity",
      "GroupInServiceCapacity",
      "GroupMaxSize",
      "GroupMinSize",
      "GroupPendingInstances",
      "GroupTerminatingInstances",
      "GroupTotalInstances",
    ]
    "AWS/Backup" = [
      "NumberOfBackupJobsAborted",
      "NumberOfBackupJobsCompleted",
      "NumberOfBackupJobsCreated",
      "NumberOfBackupJobsExpired",
      "NumberOfBackupJobsFailed",
      "NumberOfBackupJobsPending",
      "NumberOfBackupJobsRunning",
      "NumberOfCopyJobsCompleted",
      "NumberOfCopyJobsCreated",
      "NumberOfCopyJobsFailed",
      "NumberOfCopyJobsRunning",
      "NumberOfRecoveryPointsCold",
      "NumberOfRecoveryPointsCompleted",
      "NumberOfRecoveryPointsDeleting",
      "NumberOfRecoveryPointsExpired",
      "NumberOfRecoveryPointsPartial",
      "NumberOfRestoreJobsCompleted",
      "NumberOfRestoreJobsFailed",
      "NumberOfRestoreJobsPending",
      "NumberOfRestoreJobsRunning",
    ]
    "AWS/Bedrock" = [
      "InputTokenCount",
      "InvocationClientErrors",
      "InvocationLatency",
      "Invocations",
      "InvocationServerErrors",
      "InvocationThrottles",
      "OutputImageCount",
      "OutputTokenCount",
    ]
    "AWS/Billing" = [
      "EstimatedCharges",
    ]
    "AWS/Cassandra" = [
      "AccountMaxTableLevelReads",
      "AccountMaxTableLevelWrites",
      "AccountProvisionedReadCapacityUtilization",
      "AccountProvisionedWriteCapacityUtilization",
      "ConditionalCheckFailedRequests",
      "ConsumedReadCapacityUnits",
      "ConsumedWriteCapacityUnits",
      "MaxProvisionedTableReadCapacityUtilization",
      "MaxProvisionedTableWriteCapacityUtilization",
      "PerConnectionRequestRateExceeded",
      "ProvisionedReadCapacityUnits",
      "ProvisionedWriteCapacityUnits",
      "ReadThrottleEvents",
      "SuccessfulRequestLatency",
      "SystemErrors",
      "TTLDeletes",
      "UserErrors",
    ]
    "AWS/CertificateManager" = [
      "DaysToExpiry",
    ]
    "AWS/Chatbot" = [
    ]
    "AWS/ClientVPN" = [
    ]
    "AWS/CloudFront" = [
      "401ErrorRate",
      "403ErrorRate",
      "404ErrorRate",
      "4xxErrorRate",
      "502ErrorRate",
      "503ErrorRate",
      "504ErrorRate",
      "5xxErrorRate",
      "BytesDownloaded",
      "BytesUploaded",
      "CacheHitRate",
      "FunctionComputeUtilization",
      "FunctionExecutionErrors",
      "FunctionInvocations",
      "FunctionThrottles",
      "FunctionValidationErrors",
      "LambdaExecutionError",
      "LambdaLimitExceededErrors",
      "LambdaValidationError",
      "OriginLatency",
      "Requests",
      "TotalErrorRate",
    ]
    "AWS/CloudHSM" = [
    ]
    "AWS/CloudSearch" = [
      "IndexUtilization",
      "Partitions",
      "SearchableDocuments",
      "SuccessfulRequests",
    ]
    "AWS/CodeBuild" = [
      "BuildDuration",
      "Builds",
      "DownloadSourceDuration",
      "Duration",
      "FailedBuilds",
      "FinalizingDuration",
      "InstallDuration",
      "PostBuildDuration",
      "PreBuildDuration",
      "ProvisioningDuration",
      "QueuedDuration",
      "SubmittedDuration",
      "SucceededBuilds",
      "UploadArtifactsDuration",
    ]
    "AWS/CodeGuruProfiler" = [
    ]
    "AWS/Cognito" = [
      "AccountTakeOverRisk",
      "CompromisedCredentialsRisk",
      "FederationSuccesses",
      "FederationThrottles",
      "NoRisk",
      "OverrideBlock",
      "Risk",
      "SignInSuccesses",
      "SignInThrottles",
      "SignUpSuccesses",
      "SignUpThrottles",
      "TokenRefreshSuccesses",
      "TokenRefreshThrottles",
    ]
    "AWS/Connect" = [
      "CallBackNotDialableNumber",
      "CallRecordingUploadError",
      "CallsBreachingConcurrencyQuota",
      "CallsPerInterval",
      "ChatsBreachingActiveChatQuota",
      "ConcurrentActiveChats",
      "ConcurrentCalls",
      "ConcurrentCallsPercentage",
      "ContactFlowErrors",
      "ContactFlowFatalErrors",
      "LongestQueueWaitTime",
      "MisconfiguredPhoneNumbers",
      "MissedCalls",
      "PublicSigningKeyUsage",
      "QueueCapacityExceededError",
      "QueueSize",
      "ThrottledCalls",
      "ToInstancePacketLossRate",
    ]
    "AWS/DAX" = [
      "BatchGetItemRequestCount",
      "BatchWriteItemRequestCount",
      "CacheMemoryUtilization",
      "ClientConnections",
      "CPUCreditBalance",
      "CPUCreditUsage",
      "CPUSurplusCreditBalance",
      "CPUSurplusCreditsCharged",
      "CPUUtilization",
      "DeleteItemRequestCount",
      "ErrorRequestCount",
      "EstimatedDbSize",
      "EvictedSize",
      "FailedRequestCount",
      "FaultRequestCount",
      "GetItemRequestCount",
      "ItemCacheHits",
      "ItemCacheMisses",
      "NetworkBytesIn",
      "NetworkBytesOut",
      "NetworkPacketsIn",
      "NetworkPacketsOut",
      "PutItemRequestCount",
      "QueryCacheHits",
      "QueryCacheMisses",
      "QueryRequestCount",
      "ScanCacheHits",
      "ScanCacheMisses",
      "ScanRequestCount",
      "ThrottledRequestCount",
      "TotalRequestCount",
      "TransactGetItemsCount",
      "TransactWriteItemsCount",
      "UpdateItemRequestCount",
    ]
    "AWS/DDoSProtection" = [
      "DDoSAttackBitsPerSecond",
      "DDoSAttackPacketsPerSecond",
      "DDoSAttackRequestsPerSecond",
      "DDoSDetected",
    ]
    "AWS/DMS" = [
      "CDCChangesDiskSource",
      "CDCChangesDiskTarget",
      "CDCChangesMemorySource",
      "CDCChangesMemoryTarget",
      "CDCIncomingChanges",
      "CDCLatencySource",
      "CDCLatencyTarget",
      "CDCThroughputBandwidthTarget",
      "CDCThroughputRowsSource",
      "CDCThroughputRowsTarget",
      "CPUUtilization",
      "FreeableMemory",
      "FreeStorageSpace",
      "FullLoadThroughputBandwidthTarget",
      "FullLoadThroughputRowsTarget",
      "NetworkReceiveThroughput",
      "NetworkTransmitThroughput",
      "ReadIOPS",
      "ReadLatency",
      "ReadThroughput",
      "SwapUsage",
      "WriteIOPS",
      "WriteLatency",
      "WriteThroughput",
    ]
    "AWS/DX" = [
      "ConnectionBpsEgress",
      "ConnectionBpsIngress",
      "ConnectionCRCErrorCount",
      "ConnectionErrorCount",
      "ConnectionLightLevelRx",
      "ConnectionLightLevelTx",
      "ConnectionPpsEgress",
      "ConnectionPpsIngress",
      "ConnectionState",
      "VirtualInterfaceBpsEgress",
      "VirtualInterfaceBpsIngress",
      "VirtualInterfacePpsEgress",
      "VirtualInterfacePpsIngress",
    ]
    "AWS/DataSync" = [
    ]
    "AWS/DocDB" = [
      "BackupRetentionPeriodStorageUsed",
      "BufferCacheHitRatio",
      "ChangeStreamLogSize",
      "CPUCreditBalance",
      "CPUCreditUsage",
      "CPUSurplusCreditBalance",
      "CPUSurplusCreditsCharged",
      "CPUUtilization",
      "DatabaseConnections",
      "DatabaseConnectionsMax",
      "DatabaseCursors",
      "DatabaseCursorsMax",
      "DatabaseCursorsTimedOut",
      "DBClusterReplicaLagMaximum",
      "DBClusterReplicaLagMinimum",
      "DBInstanceReplicaLag",
      "DiskQueueDepth",
      "DocumentsDeleted",
      "DocumentsInserted",
      "DocumentsReturned",
      "DocumentsUpdated",
      "EngineUptime",
      "FreeableMemory",
      "FreeLocalStorage",
      "IndexBufferCacheHitRatio",
      "LowMemNumOperationsThrottled",
      "LowMemThrottleMaxQueueDepth",
      "LowMemThrottleQueueDepth",
      "NetworkReceiveThroughput",
      "NetworkThroughput",
      "NetworkTransmitThroughput",
      "OpcountersCommand",
      "OpcountersDelete",
      "OpcountersGetmore",
      "OpcountersInsert",
      "OpcountersQuery",
      "OpcountersUpdate",
      "ReadIOPS",
      "ReadLatency",
      "ReadThroughput",
      "SnapshotStorageUsed",
      "SwapUsage",
      "TotalBackupStorageBilled",
      "TransactionsAborted",
      "TransactionsCommitted",
      "TransactionsOpen",
      "TransactionsOpenMax",
      "TransactionsStarted",
      "TTLDeletedDocuments",
      "VolumeBytesUsed",
      "VolumeReadIOPs",
      "VolumeWriteIOPs",
      "WriteIOPS",
      "WriteLatency",
      "WriteThroughput",
    ]
    "AWS/DynamoDB" = [
      "AccountMaxReads",
      "AccountMaxTableLevelReads",
      "AccountMaxTableLevelWrites",
      "AccountMaxWrites",
      "AccountProvisionedReadCapacityUtilization",
      "AccountProvisionedWriteCapacityUtilization",
      "ConditionalCheckFailedRequests",
      "ConsumedReadCapacityUnits",
      "ConsumedWriteCapacityUnits",
      "MaxProvisionedTableReadCapacityUtilization",
      "MaxProvisionedTableWriteCapacityUtilization",
      "OnlineIndexConsumedWriteCapacity",
      "OnlineIndexPercentageProgress",
      "OnlineIndexThrottleEvents",
      "PendingReplicationCount",
      "ProvisionedReadCapacityUnits",
      "ProvisionedWriteCapacityUnits",
      "ReadThrottleEvents",
      "ReplicationLatency",
      "ReturnedBytes",
      "ReturnedItemCount",
      "ReturnedRecordsCount",
      "SuccessfulRequestLatency",
      "SystemErrors",
      "ThrottledRequests",
      "TimeToLiveDeletedItemCount",
      "TransactionConflict",
      "UserErrors",
      "WriteThrottleEvents",
    ]
    "AWS/EBS" = [
      "BurstBalance",
      "VolumeConsumedReadWriteOps",
      "VolumeIdleTime",
      "VolumeQueueLength",
      "VolumeReadBytes",
      "VolumeReadOps",
      "VolumeThroughputPercentage",
      "VolumeTotalReadTime",
      "VolumeTotalWriteTime",
      "VolumeWriteBytes",
      "VolumeWriteOps",
    ]
    "AWS/EC2" = [
      "CPUCreditBalance",
      "CPUCreditUsage",
      "CPUSurplusCreditBalance",
      "CPUSurplusCreditsCharged",
      "CPUUtilization",
      "DedicatedHostCPUUtilization",
      "DiskReadBytes",
      "DiskReadOps",
      "DiskWriteBytes",
      "DiskWriteOps",
      "EBSByteBalance%",
      "EBSIOBalance%",
      "EBSReadBytes",
      "EBSReadOps",
      "EBSWriteBytes",
      "EBSWriteOps",
      "NetworkIn",
      "NetworkOut",
      "NetworkPacketsIn",
      "NetworkPacketsOut",
      "StatusCheckFailed",
      "StatusCheckFailed_Instance",
      "StatusCheckFailed_System",
    ]
    "AWS/EC2CapacityReservations" = [
    ]
    "AWS/EC2Spot" = [
      "AvailableInstancePoolsCount",
      "BidsSubmittedForCapacity",
      "EligibleInstancePoolCount",
      "FulfilledCapacity",
      "MaxPercentCapacityAllocation",
      "PendingCapacity",
      "PercentCapacityAllocation",
      "TargetCapacity",
      "TerminatingCapacity",
    ]
    "AWS/EC2/API" = [
    ]
    "AWS/ECR" = [
      "RepositoryPullCount",
    ]
    "AWS/ECS" = [
      "CPUReservation",
      "CPUUtilization",
      "MemoryReservation",
      "MemoryUtilization",
    ]
    "AWS/EFS" = [
      "BurstCreditBalance",
      "ClientConnections",
      "DataReadIOBytes",
      "DataWriteIOBytes",
      "MetadataIOBytes",
      "MeteredIOBytes",
      "PercentIOLimit",
      "PermittedThroughput",
      "StorageBytes",
      "TotalIOBytes",
    ]
    "AWS/ELB" = [
      "BackendConnectionErrors",
      "EstimatedALBActiveConnectionCount",
      "EstimatedALBConsumedLCUs",
      "EstimatedALBNewConnectionCount",
      "EstimatedProcessedBytes",
      "HealthyHostCount",
      "HTTPCode_Backend_2XX",
      "HTTPCode_Backend_3XX",
      "HTTPCode_Backend_4XX",
      "HTTPCode_Backend_5XX",
      "HTTPCode_ELB_4XX",
      "HTTPCode_ELB_5XX",
      "Latency",
      "RequestCount",
      "SpilloverCount",
      "SurgeQueueLength",
      "UnHealthyHostCount",
    ]
    "AWS/EMRServerless" = [
    ]
    "AWS/ES" = [
      "2xx",
      "3xx",
      "4xx",
      "5xx",
      "AlertingDegraded",
      "AlertingIndexExists",
      "AlertingIndexStatus.green",
      "AlertingIndexStatus.red",
      "AlertingIndexStatus.yellow",
      "AlertingNodesNotOnSchedule",
      "AlertingNodesOnSchedule",
      "AlertingScheduledJobEnabled",
      "ADAnomalyDetectorsIndexStatusIndexExists",
      "ADAnomalyDetectorsIndexStatus.red",
      "ADAnomalyResultsIndexStatusIndexExists",
      "ADAnomalyResultsIndexStatus.red",
      "AutomatedSnapshotFailure",
      "ClusterIndexWritesBlocked",
      "ClusterStatus.green",
      "ClusterStatus.red",
      "ClusterStatus.yellow",
      "ClusterUsedSpace",
      "CPUCreditBalance",
      "CPUUtilization",
      "CrossClusterInboundRequests",
      "CrossClusterOutboundConnections",
      "CrossClusterOutboundRequests",
      "DeletedDocuments",
      "DiskQueueDepth",
      "FreeStorageSpace",
      "HotStorageSpaceUtilization",
      "ColdToWarmMigrationQueueSize",
      "IndexingLatency",
      "IndexingRate",
      "InvalidHostHeaderRequests",
      "JVMGCOldCollectionCount",
      "JVMGCOldCollectionTime",
      "JVMGCYoungCollectionCount",
      "JVMGCYoungCollectionTime",
      "JVMMemoryPressure",
      "KMSKeyError",
      "KMSKeyInaccessible",
      "MasterCPUCreditBalance",
      "MasterCPUUtilization",
      "MasterFreeStorageSpace",
      "MasterJVMMemoryPressure",
      "MasterReachableFromNode",
      "MasterSysMemoryUtilization",
      "ADModelsCheckpointIndexStatusIndexExists",
      "ADModelsCheckpointIndexStatus.red",
      "Nodes",
      "OpenSearchDashboardsHealthyNodes",
      "OpenSearchRequests",
      "ReadIOPS",
      "ReadLatency",
      "ReadThroughput",
      "SearchLatency",
      "SearchRate",
      "SearchableDocuments",
      "SQLDefaultCursorRequestCount",
      "SysMemoryUtilization",
      "ThreadpoolBulkQueue",
      "ThreadpoolBulkRejected",
      "ThreadpoolBulkThreads",
      "ThreadpoolForce_mergeQueue",
      "ThreadpoolForce_mergeRejected",
      "ThreadpoolForce_mergeThreads",
      "ThreadpoolIndexRejected",
      "ThreadpoolIndexThreads",
      "ThreadpoolSearchQueue",
      "ThreadpoolSearchRejected",
      "ThreadpoolSearchThreads",
      "ThreadpoolWriteQueue",
      "ThreadpoolWriteRejected",
      "ThreadpoolWriteThreads",
      "WarmCPUUtilization",
      "WarmFreeStorageSpace",
      "WarmJVMMemoryPressure",
      "WarmSearchLatency",
      "WarmSearchRate",
      "WarmSearchableDocuments",
      "WarmStorageSpaceUtilization",
      "WarmSysMemoryUtilization",
      "WarmToHotMigrationQueueSize",
      "WriteIOPS",
      "WriteLatency",
      "WriteThroughput",
    ]
    "AWS/ElastiCache" = [
      "ActiveDefragHits",
      "BytesReadIntoMemcached",
      "BytesUsedForCache",
      "BytesUsedForCacheItems",
      "BytesUsedForHash",
      "BytesWrittenOutFromMemcached",
      "CPUCreditBalance",
      "CPUCreditUsage",
      "CPUUtilization",
      "CacheHitRate",
      "CacheHits",
      "CacheMisses",
      "CasBadval",
      "CasHits",
      "CasMisses",
      "CmdConfigGet",
      "CmdConfigSet",
      "CmdFlush",
      "CmdGet",
      "CmdSet",
      "CmdTouch",
      "CurrConfig",
      "CurrConnections",
      "CurrItems",
      "DB0AverageTTL",
      "DatabaseMemoryUsagePercentage",
      "DecrHits",
      "DecrMisses",
      "DeleteHits",
      "DeleteMisses",
      "EngineCPUUtilization",
      "EvalBasedCmds",
      "EvalBasedCmdsECPUs",
      "EvictedUnfetched",
      "Evictions",
      "ExpiredUnfetched",
      "FreeableMemory",
      "GeoSpatialBasedCmds",
      "GetHits",
      "GetMisses",
      "GetTypeCmds",
      "GetTypeCmdsECPUs",
      "HashBasedCmds",
      "HashBasedCmdsECPUs",
      "HyperLogLogBasedCmds",
      "IncrHits",
      "IncrMisses",
      "IsMaster",
      "KeyBasedCmds",
      "KeyBasedCmdsECPUs",
      "ListBasedCmds",
      "MasterLinkHealthStatus",
      "MemoryFragmentationRatio",
      "NetworkBytesIn",
      "NetworkBytesOut",
      "NetworkPacketsIn",
      "NetworkPacketsOut",
      "NewConnections",
      "NewItems",
      "Reclaimed",
      "ReplicationBytes",
      "ReplicationLag",
      "SaveInProgress",
      "SetBasedCmds",
      "SlabsMoved",
      "SortedSetBasedCmds",
      "StreamBasedCmds",
      "StringBasedCmds",
      "SwapUsage",
      "TouchHits",
      "TouchMisses",
      "UnusedMemory",
    ]
    "AWS/ElasticBeanstalk" = [
      "ApplicationLatencyP10",
      "ApplicationLatencyP50",
      "ApplicationLatencyP75",
      "ApplicationLatencyP85",
      "ApplicationLatencyP90",
      "ApplicationLatencyP95",
      "ApplicationLatencyP99",
      "ApplicationLatencyP99.9",
      "ApplicationRequests2xx",
      "ApplicationRequests3xx",
      "ApplicationRequests4xx",
      "ApplicationRequests5xx",
      "ApplicationRequestsTotal",
      "CPUIdle",
      "CPUIowait",
      "CPUIrq",
      "CPUNice",
      "CPUSoftirq",
      "CPUSystem",
      "CPUUser",
      "EnvironmentHealth",
      "InstanceHealth",
      "InstancesDegraded",
      "InstancesInfo",
      "InstancesNoData",
      "InstancesOk",
      "InstancesPending",
      "InstancesSevere",
      "InstancesUnknown",
      "InstancesWarning",
      "LoadAverage1min",
      "LoadAverage5min",
      "RootFilesystemUtil",
    ]
    "AWS/ElasticMapReduce" = [
      "AppsCompleted",
      "AppsFailed",
      "AppsKilled",
      "AppsPending",
      "AppsRunning",
      "AppsSubmitted",
      "CapacityRemainingGB",
      "ContainerAllocated",
      "ContainerPending",
      "ContainerPendingRatio",
      "ContainerReserved",
      "CoreNodesPending",
      "CoreNodesRequested",
      "CoreNodesRunning",
      "CoreUnitsRequested",
      "CoreUnitsRunning",
      "CoreVCPURequested",
      "CoreVCPURunning",
      "CorruptBlocks",
      "DfsPendingReplicationBlocks",
      "HDFSBytesRead",
      "HDFSBytesWritten",
      "HDFSUtilization",
      "IsIdle",
      "JobsFailed",
      "JobsRunning",
      "LiveDataNodes",
      "LiveTaskTrackers",
      "MapSlotsOpen",
      "MapTasksRemaining",
      "MapTasksRunning",
      "MemoryAllocatedMB",
      "MemoryAvailableMB",
      "MemoryReservedMB",
      "MemoryTotalMB",
      "MissingBlocks",
      "MRActiveNodes",
      "MRDecommissionedNodes",
      "MRLostNodes",
      "MRRebootedNodes",
      "MRTotalNodes",
      "MRUnhealthyNodes",
      "MultiMasterInstanceGroupNodesRequested",
      "MultiMasterInstanceGroupNodesRunning",
      "MultiMasterInstanceGroupNodesRunningPercentage",
      "PendingDeletionBlocks",
      "ReduceSlotsOpen",
      "ReduceTasksRemaining",
      "ReduceTasksRunning",
      "RemainingMapTasksPerSlot",
      "S3BytesRead",
      "S3BytesWritten",
      "TaskNodesPending",
      "TaskNodesRequested",
      "TaskNodesRunning",
      "TaskUnitsRequested",
      "TaskUnitsRunning",
      "TaskVCPURequested",
      "TaskVCPURunning",
      "TotalLoad",
      "TotalNodesRequested",
      "TotalNodesRunning",
      "TotalUnitsRequested",
      "TotalUnitsRunning",
      "TotalVCPURequested",
      "TotalVCPURunning",
      "UnderReplicatedBlocks",
      "YARNMemoryAvailablePercentage",
    ]
    "AWS/ElasticTranscoder" = [
      "Billed Audio Output",
      "Billed HD Output",
      "Billed SD Output",
      "Errors",
      "Jobs Completed",
      "Jobs Errored",
      "Outputs per Job",
      "Standby Time",
      "Throttles",
    ]
    "AWS/EventBridge/Pipes" = [
    ]
    "AWS/Events" = [
    ]
    "AWS/FSx" = [
      "DataReadBytes",
      "DataReadOperations",
      "DataWriteBytes",
      "DataWriteOperations",
      "FreeDataStorageCapacity",
      "MetadataOperations",
      "StorageCapacity",
    ]
    "AWS/Firehose" = [
      "BackupToS3.Bytes",
      "BackupToS3.DataFreshness",
      "BackupToS3.Records",
      "BackupToS3.Success",
      "BytesPerSecondLimit",
      "DataReadFromKinesisStream.Bytes",
      "DataReadFromKinesisStream.Records",
      "DeliveryToHttpEndpoint.Bytes",
      "DeliveryToHttpEndpoint.DataFreshness",
      "DeliveryToHttpEndpoint.ProcessedBytes",
      "DeliveryToHttpEndpoint.ProcessedRecords",
      "DeliveryToHttpEndpoint.Records",
      "DeliveryToHttpEndpoint.Success",
      "DeliveryToRedshift.Bytes",
      "DeliveryToRedshift.Records",
      "DeliveryToRedshift.Success",
      "DeliveryToS3.Bytes",
      "DeliveryToS3.DataFreshness",
      "DeliveryToS3.Records",
      "DeliveryToS3.Success",
      "DeliveryToSplunk.Bytes",
      "DeliveryToSplunk.DataAckLatency",
      "DeliveryToSplunk.DataFreshness",
      "DeliveryToSplunk.Records",
      "DeliveryToSplunk.Success",
      "DescribeDeliveryStream.Latency",
      "DescribeDeliveryStream.Requests",
      "IncomingBytes",
      "IncomingPutRequests",
      "IncomingRecords",
      "KinesisMillisBehindLatest",
      "KMSKeyAccessDenied",
      "KMSKeyDisabled",
      "KMSKeyInvalidState",
      "KMSKeyNotFound",
      "ListDeliveryStreams.Latency",
      "ListDeliveryStreams.Requests",
      "PutRecord.Bytes",
      "PutRecord.Latency",
      "PutRecord.Requests",
      "PutRecordBatch.Bytes",
      "PutRecordBatch.Latency",
      "PutRecordBatch.Records",
      "PutRecordBatch.Requests",
      "PutRequestsPerSecondLimit",
      "RecordsPerSecondLimit",
      "ThrottledDescribeStream",
      "ThrottledGetRecords",
      "ThrottledGetShardIterator",
      "ThrottledRecords",
      "UpdateDeliveryStream.Latency",
      "UpdateDeliveryStream.Requests",
    ]
    "AWS/FraudDetector" = [
    ]
    "AWS/GameLift" = [
      "ActivatingGameSessions",
      "ActiveGameSessions",
      "ActiveInstances",
      "ActiveServerProcesses",
      "AvailableGameSessions",
      "AverageWaitTime",
      "CurrentPlayerSessions",
      "DesiredInstances",
      "FirstChoiceNotViable",
      "FirstChoiceOutOfCapacity",
      "GameSessionInterruptions",
      "HealthyServerProcesses",
      "IdleInstances",
      "InstanceInterruptions",
      "LowestLatencyPlacement",
      "LowestPricePlacement",
      "MaxInstances",
      "MinInstances",
      "PercentAvailableGameSessions",
      "PercentHealthyServerProcesses",
      "PercentIdleInstances",
      "PlacementsCanceled",
      "PlacementsFailed",
      "PlacementsStarted",
      "PlacementsSucceeded",
      "PlacementsTimedOut",
      "PlayerSessionActivations",
      "QueueDepth",
      "ServerProcessAbnormalTerminations",
    ]
    "AWS/GatewayELB" = [
    ]
    "AWS/GlobalAccelerator" = [
      "Flows_Dropped_No_Endpoint_Found",
      "HealthyEndpointCount",
      "NewFlowCount",
      "ProcessedBytesIn",
      "ProcessedBytesOut",
      "UnhealthyEndpointCount",
    ]
    "AWS/GroundStation" = [
    ]
    "AWS/IVS" = [
    ]
    "AWS/IVSRealTime" = [
    ]
    "AWS/Inspector" = [
      "TotalAssessmentRunFindings",
      "TotalAssessmentRuns",
      "TotalHealthyAgents",
      "TotalMatchingAgents",
    ]
    "AWS/IoT" = [
      "Connect.AuthError",
      "Connect.ClientError",
      "Connect.ClientIDThrottle",
      "Connect.ServerError",
      "Connect.Success",
      "Connect.Throttle",
      "CredentialExchangeSuccess",
      "DeleteThingShadow.Accepted",
      "ErrorActionFailure",
      "ErrorActionSuccess",
      "Failure",
      "GetThingShadow.Accepted",
      "HttpCode_4XX",
      "HttpCode_5XX",
      "HttpRequestTimeout",
      "HttpUnknownHost",
      "ListThingShadow.Accepted",
      "ParseError",
      "Ping.Success",
      "PublishIn.AuthError",
      "PublishIn.ClientError",
      "PublishIn.ServerError",
      "PublishIn.Success",
      "PublishIn.Throttle",
      "PublishOut.AuthError",
      "PublishOut.ClientError",
      "PublishOut.Success",
      "PublishOut.Throttle",
      "PublishRetained.AuthError",
      "PublishRetained.Success",
      "PublishRetained.Throttle",
      "Queued.ServerError",
      "Queued.Success",
      "Queued.Throttle",
      "RuleMessageThrottled",
      "RuleNotFound",
      "RulesExecuted",
      "Subscribe.AuthError",
      "Subscribe.ClientError",
      "Subscribe.ServerError",
      "Subscribe.Success",
      "Subscribe.Throttle",
      "Success",
      "Throttle.Exceeded",
      "TopicMatch",
      "Unsubscribe.ClientError",
      "Unsubscribe.ServerError",
      "Unsubscribe.Success",
      "Unsubscribe.Throttle",
      "UpdateThingShadow.Accepted",
    ]
    "AWS/IoTAnalytics" = [
    ]
    "AWS/IoTSiteWise" = [
    ]
    "AWS/KMS" = [
      "SecondsUntilKeyMaterialExpiration",
    ]
    "AWS/Kafka" = [
      "ActiveControllerCount",
      "BwInAllowanceExceeded",
      "BwOutAllowanceExceeded",
      "BytesInPerSec",
      "BytesOutPerSec",
      "ConnectionCloseRate",
      "ConnectionCount",
      "ConnTrackAllowanceExceeded",
      "CPUCreditBalance",
      "CpuCreditUsage",
      "CpuIdle",
      "CpuSystem",
      "CpuUser",
      "EstimatedMaxTimeLag",
      "EstimatedTimeLag",
      "FetchConsumerLocalTimeMsMean",
      "FetchConsumerRequestQueueTimeMsMean",
      "FetchConsumerResponseQueueTimeMsMean",
      "FetchConsumerResponseSendTimeMsMean",
      "FetchConsumerTotalTimeMsMean",
      "FetchFollowerLocalTimeMsMean",
      "FetchFollowerRequestQueueTimeMsMean",
      "FetchFollowerResponseQueueTimeMsMean",
      "FetchFollowerResponseSendTimeMsMean",
      "FetchFollowerTotalTimeMsMean",
      "FetchMessageConversionsPerSec",
      "FetchThrottleByteRate",
      "FetchThrottleQueueSize",
      "FetchThrottleTime",
      "GlobalPartitionCount",
      "GlobalTopicCount",
      "HeapMemoryAfterGC",
      "KafkaAppLogsDiskUsed",
      "KafkaDataLogsDiskUsed",
      "LeaderCount",
      "MaxOffsetLag",
      "MemoryBuffered",
      "MemoryCached",
      "MemoryFree",
      "MemoryUsed",
      "MessagesInPerSec",
      "NetworkProcessorAvgIdlePercent",
      "NetworkRxDropped",
      "NetworkRxErrors",
      "NetworkRxPackets",
      "NetworkTxDropped",
      "NetworkTxErrors",
      "NetworkTxPackets",
      "OfflinePartitionsCount",
      "OffsetLag",
      "PartitionCount",
      "PpsAllowanceExceeded",
      "ProduceLocalTimeMsMean",
      "ProduceMessageConversionsPerSec",
      "ProduceMessageConversionsTimeMsMean",
      "ProduceRequestQueueTimeMsMean",
      "ProduceResponseQueueTimeMsMean",
      "ProduceResponseSendTimeMsMean",
      "ProduceThrottleByteRate",
      "ProduceThrottleQueueSize",
      "ProduceThrottleTime",
      "ProduceTotalTimeMsMean",
      "RemoteCopyBytesPerSec",
      "RemoteCopyErrorsPerSec",
      "RemoteCopyLagBytes",
      "RequestExemptFromThrottleTime",
      "RequestHandlerAvgIdlePercent",
      "RequestThrottleQueueSize",
      "RequestThrottleTime",
      "RequestTime",
      "RootDiskUsed",
      "SumOffsetLag",
      "SwapFree",
      "SwapUsed",
      "TrafficBytes",
      "UnderMinIsrPartitionCount",
      "UnderReplicatedPartitions",
      "VolumeQueueLength",
      "VolumeReadBytes",
      "VolumeReadOps",
      "VolumeTotalReadTime",
      "VolumeTotalWriteTime",
      "VolumeWriteBytes",
      "VolumeWriteOps",
      "ZooKeeperRequestLatencyMsMean",
    ]
    "AWS/KafkaConnect" = [
    ]
    "AWS/Kendra" = [
    ]
    "AWS/Kinesis" = [
      "GetRecords.Bytes",
      "GetRecords.IteratorAge",
      "GetRecords.IteratorAgeMilliseconds",
      "GetRecords.Latency",
      "GetRecords.Records",
      "GetRecords.Success",
      "IncomingBytes",
      "IncomingRecords",
      "IteratorAgeMilliseconds",
      "OutgoingBytes",
      "OutgoingRecords",
      "PutRecord.Bytes",
      "PutRecord.Latency",
      "PutRecord.Success",
      "PutRecords.Bytes",
      "PutRecords.FailedRecords",
      "PutRecords.Latency",
      "PutRecords.Records",
      "PutRecords.Success",
      "PutRecords.SuccessfulRecords",
      "PutRecords.ThrottledRecords",
      "PutRecords.TotalRecords",
      "ReadProvisionedThroughputExceeded",
      "SubscribeToShard.RateExceeded",
      "SubscribeToShard.Success",
      "SubscribeToShardEvent.Bytes",
      "SubscribeToShardEvent.MillisBehindLatest",
      "SubscribeToShardEvent.Records",
      "SubscribeToShardEvent.Success",
      "WriteProvisionedThroughputExceeded",
    ]
    "AWS/KinesisAnalytics" = [
      "Bytes",
      "InputProcessing.DroppedRecords",
      "InputProcessing.Duration",
      "InputProcessing.OkBytes",
      "InputProcessing.OkRecords",
      "InputProcessing.ProcessingFailedRecords",
      "InputProcessing.Success",
      "KPUs",
      "LambdaDelivery.DeliveryFailedRecords",
      "LambdaDelivery.Duration",
      "LambdaDelivery.OkRecords",
      "MillisBehindLatest",
      "Records",
      "Success",
    ]
    "AWS/KinesisVideo" = [
    ]
    "AWS/Lambda" = [
      "AsyncEventAge",
      "AsyncEventsDropped",
      "AsyncEventsReceived",
      "ConcurrentExecutions",
      "DeadLetterErrors",
      "Duration",
      "Errors",
      "Invocations",
      "IteratorAge",
      "OversizedRecordCount",
      "PostRuntimeExtensionsDuration",
      "ProvisionedConcurrencyInvocations",
      "ProvisionedConcurrencySpilloverInvocations",
      "ProvisionedConcurrencyUtilization",
      "ProvisionedConcurrentExecutions",
      "Throttles",
      "UnreservedConcurrentExecutions",
    ]
    "AWS/Lex" = [
      "MissedUtteranceCount",
      "RuntimeInvalidLambdaResponses",
      "RuntimeLambdaErrors",
      "RuntimePollyErrors",
      "RuntimeRequestCount",
      "RuntimeSucessfulRequestLatency",
      "RuntimeSystemErrors",
      "RuntimeThrottledEvents",
      "RuntimeUserErrors",
    ]
    "AWS/Logs" = [
    ]
    "AWS/LookoutMetrics" = [
    ]
    "AWS/ML" = [
      "PredictCount",
      "PredictFailureCount",
    ]
    "AWS/MWAA" = [
      "CollectDBDags",
      "CriticalSectionBusy",
      "CriticalSectionDuration",
      "DagBagSize",
      "DagCallbackExceptions",
      "DAGDependencyCheck",
      "DAGDurationFailed",
      "DAGDurationSuccess",
      "DAGFileProcessingLastDuration",
      "DAGFileProcessingLastRunSecondsAgo",
      "DAGFileRefreshError",
      "DAGScheduleDelay",
      "ExceptionFailures",
      "FailedSLAEmailAttempts",
      "FirstTaskSchedulingDelay",
      "ImportErrors",
      "InfraFailures",
      "JobEnd",
      "JobHeartbeatFailure",
      "JobStart",
      "ManagerStalls",
      "OpenSlots",
      "OperatorFailures",
      "OperatorSuccesses",
      "OrphanedTasksAdopted",
      "OrphanedTasksCleared",
      "PokedExceptions",
      "PokedSuccess",
      "PokedTasks",
      "PoolOpenSlots",
      "PoolQueuedSlots",
      "PoolRunningSlots",
      "PoolStarvingTasks",
      "ProcessorTimeouts",
      "QueuedTasks",
      "RunningTasks",
      "SchedulerHeartbeat",
      "TaskInstanceCreatedUsingOperator",
      "TaskInstanceDuration",
      "TaskInstanceFailures",
      "TaskInstanceFinished",
      "TaskInstancePreviouslySucceeded",
      "TaskInstanceSuccesses",
      "TaskRemovedFromDAG",
      "TaskRestoredToDAG",
      "TasksExecutable",
      "TasksKilledExternally",
      "TasksPending",
      "TasksRunning",
      "TasksStarving",
      "TasksWithoutDagRun",
      "TaskTimeoutError",
      "TotalParseTime",
    ]
    "AWS/MediaConnect" = [
      "ARQRecovered",
      "ARQRequests",
      "BitRate",
      "CATError",
      "CRCError",
      "Connected",
      "ConnectedOutputs",
      "ContinuityCounter",
      "Disconnections",
      "DroppedPackets",
      "FailoverSwitches",
      "MaintenanceCanceled",
      "MaintenanceFailed",
      "MaintenanceRescheduled",
      "MaintenanceScheduled",
      "MaintenanceStarted",
      "MaintenanceSucceeded",
      "MergeActive",
      "MergeLatency",
      "NotRecoveredPackets",
      "OutputConnected",
      "OutputDisconnections",
      "OutputDroppedPayloads",
      "OutputLatePayloads",
      "OutputTotalBytes",
      "OutputTotalPayloads",
      "OverflowPackets",
      "PacketLossPercent",
      "PATError",
      "PCRAccuracyError",
      "PCRError",
      "PIDError",
      "PMTError",
      "PTSError",
      "RecoveredPackets",
      "RoundTripTime",
      "SourceARQRecovered",
      "SourceARQRequests",
      "SourceBitRate",
      "SourceCATError",
      "SourceCRCError",
      "SourceConnected",
      "SourceContinuityCounter",
      "SourceDisconnections",
      "SourceDroppedPackets",
      "SourceDroppedPayloads",
      "SourceFECPackets",
      "SourceFECRecovered",
      "SourceLatePayloads",
      "SourceMergeActive",
      "SourceMergeLatency",
      "SourceMergeStatusWarnMismatch",
      "SourceMergeStatusWarnSolo",
      "SourceMissingPackets",
      "SourceNotRecoveredPackets",
      "SourceOverflowPackets",
      "SourcePacketLossPercent",
      "SourcePATError",
      "SourcePCRAccuracyError",
      "SourcePCRError",
      "SourcePIDError",
      "SourcePMTError",
      "SourcePTSError",
      "SourceRecoveredPackets",
      "SourceRoundTripTime",
      "SourceSelected",
      "SourceTotalBytes",
      "SourceTotalPackets",
      "SourceTotalPayloads",
      "SourceTransportError",
      "SourceTSByteError",
      "SourceTSSyncLoss",
      "TotalPackets",
      "TransportError",
      "TSByteError",
      "TSSyncLoss",
    ]
    "AWS/MediaConvert" = [
      "AudioOutputDuration",
      "Errors",
      "HDOutputDuration",
      "JobsCompletedCount",
      "JobsErroredCount",
      "SDOutputDuration",
      "StandbyTime",
      "TranscodingTime",
      "UHDOutputDuration",
    ]
    "AWS/MediaLive" = [
      "ActiveAlerts",
      "ActiveOutputs",
      "ChannelInputErrorSeconds",
      "ConfiguredBitrate",
      "ConfiguredBitrateAvailable",
      "EncoderBitrate",
      "EncoderRunning",
      "ErrorSeconds",
      "FillMsec",
      "InputLocked",
      "InputTimecodesPresent",
      "InputVideoFrameRate",
      "LinkedToStreamEndpoint",
      "NetworkIn",
      "NetworkOut",
      "NotRecoveredPackets",
      "Output4xxErrors",
      "Output5xxErrors",
      "OutputAudioLevelDbfs",
      "OutputAudioLevelLkfs",
      "PipelinesLocked",
      "PrimaryInputActive",
      "RecoveredPackets",
      "Streaming",
      "SvqTime",
      "Temperature",
      "TotalPackets",
      "UsingHDMI",
      "UsingSDI",
    ]
    "AWS/MediaPackage" = [
      "ActiveInput",
      "EgressBytes",
      "EgressRequestCount",
      "EgressResponseTime",
      "IngressBytes",
      "IngressResponseTime",
    ]
    "AWS/MediaStore" = [
      "4xxErrorCount",
      "5xxErrorCount",
      "BytesDownloaded",
      "BytesUploaded",
      "RequestCount",
      "ThrottleCount",
      "TotalTime",
      "TurnaroundTime",
    ]
    "AWS/MediaTailor" = [
      "4xxErrorCount",
      "5xxErrorCount",
      "AdDecisionServer.Ads",
      "AdDecisionServer.Duration",
      "AdDecisionServer.Errors",
      "AdDecisionServer.FillRate",
      "AdDecisionServer.Latency",
      "AdDecisionServer.Timeouts",
      "AdNotReady",
      "AdsBilled",
      "Avail.Duration",
      "Avail.FilledDuration",
      "Avail.FillRate",
      "Avail.Impression",
      "Avail.ObservedDuration",
      "Avail.ObservedFilledDuration",
      "Avail.ObservedFillRate",
      "Avail.ObservedSlateDuration",
      "GetManifest.Errors",
      "GetManifest.Latency",
      "Origin.Errors",
      "Origin.Latency",
      "Origin.ManifestFileSizeBytes",
      "Origin.ManifestFileSizeTooLarge",
      "Origin.Timeouts",
      "RequestCount",
      "Requests",
      "SkippedReason.DurationExceeded",
      "SkippedReason.EarlyCueIn",
      "SkippedReason.InternalError",
      "SkippedReason.NewCreative",
      "SkippedReason.NoVariantMatch",
      "SkippedReason.PersonalizationThresholdExceeded",
      "SkippedReason.ProfileNotFound",
      "SkippedReason.TranscodeError",
      "SkippedReason.TranscodeInProgress",
      "TotalTime",
    ]
    "AWS/MemoryDB" = [
      "ActiveDefragHits",
      "AuthenticationFailures",
      "BytesReadFromDisk",
      "BytesUsedForMemoryDB",
      "BytesWrittenToDisk",
      "CommandAuthorizationFailures",
      "CPUUtilization",
      "CurrConnections",
      "CurrItems",
      "DatabaseMemoryUsagePercentage",
      "DB0AverageTTL",
      "EngineCPUUtilization",
      "EvalBasedCmds",
      "Evictions",
      "FreeableMemory",
      "GeoSpatialBasedCmds",
      "GetTypeCmds",
      "HashBasedCmds",
      "HyperLogLogBasedCmds",
      "IsPrimary",
      "JsonBasedCmds",
      "KeyAuthorizationFailures",
      "KeyBasedCmds",
      "KeysTracked",
      "KeyspaceHits",
      "KeyspaceMisses",
      "ListBasedCmds",
      "MaxReplicationThroughput",
      "MemoryFragmentationRatio",
      "NetworkBandwidthInAllowanceExceeded",
      "NetworkBandwidthOutAllowanceExceeded",
      "NetworkBytesIn",
      "NetworkBytesOut",
      "NetworkConntrackAllowanceExceeded",
      "NetworkPacketsIn",
      "NetworkPacketsOut",
      "NetworkPacketsPerSecondAllowanceExceeded",
      "NewConnections",
      "NumItemsReadFromDisk",
      "NumItemsWrittenToDisk",
      "PrimaryLinkHealthStatus",
      "PubSubBasedCmds",
      "Reclaimed",
      "ReplicationBytes",
      "ReplicationDelayedWriteCommands",
      "ReplicationLag",
      "SetBasedCmds",
      "SetTypeCmds",
      "SortedSetBasedCmds",
      "StreamBasedCmds",
      "StringBasedCmds",
    ]
    "AWS/NATGateway" = [
      "ActiveConnectionCount",
      "BytesInFromDestination",
      "BytesInFromSource",
      "BytesOutToDestination",
      "BytesOutToSource",
      "ConnectionAttemptCount",
      "ConnectionEstablishedCount",
      "ErrorPortAllocation",
      "IdleTimeoutCount",
      "PacketsDropCount",
      "PacketsInFromDestination",
      "PacketsInFromSource",
      "PacketsOutToDestination",
      "PacketsOutToSource",
    ]
    "AWS/Neptune" = [
      "BackupRetentionPeriodStorageUsed",
      "BufferCacheHitRatio",
      "ClusterReplicaLag",
      "ClusterReplicaLagMaximum",
      "ClusterReplicaLagMinimum",
      "CPUUtilization",
      "EngineUptime",
      "FreeableMemory",
      "GlobalDbDataTransferBytes",
      "GlobalDbReplicatedWriteIO",
      "GlobalDbProgressLag",
      "GremlinRequestsPerSec",
      "GremlinWebSocketOpenConnections",
      "LoaderRequestsPerSec",
      "MainRequestQueuePendingRequests",
      "NCUUtilization",
      "NetworkThroughput",
      "NetworkTransmitThroughput",
      "NumTxCommitted",
      "NumTxOpened",
      "NumTxRolledBack",
      "OpenCypherRequestsPerSec",
      "OpenCypherBoltOpenConnections",
      "ServerlessDatabaseCapacity",
      "SnapshotStorageUsed",
      "SparqlRequestsPerSec",
      "StatsNumStatementsScanned",
      "TotalBackupStorageBilled",
      "TotalRequestsPerSec",
      "TotalClientErrorsPerSec",
      "TotalServerErrorsPerSec",
      "UndoLogListSize",
      "VolumeBytesUsed",
      "VolumeReadIOPs",
      "VolumeWriteIOPs",
    ]
    "AWS/NetworkELB" = [
      "ActiveFlowCount",
      "ActiveFlowCount_TCP",
      "ActiveFlowCount_TLS",
      "ActiveFlowCount_UDP",
      "ClientTLSNegotiationErrorCount",
      "ConsumedLCUs",
      "ConsumedLCUs_TCP",
      "ConsumedLCUs_TLS",
      "ConsumedLCUs_UDP",
      "HealthyHostCount",
      "NewFlowCount",
      "NewFlowCount_TCP",
      "NewFlowCount_TLS",
      "NewFlowCount_UDP",
      "PeakPacketsPerSecond",
      "PortAllocationErrorCount",
      "ProcessedBytes",
      "ProcessedBytes_TCP",
      "ProcessedBytes_TLS",
      "ProcessedBytes_UDP",
      "ProcessedPackets",
      "TargetTLSNegotiationErrorCount",
      "TCP_Client_Reset_Count",
      "TCP_ELB_Reset_Count",
      "TCP_Target_Reset_Count",
      "UnHealthyHostCount",
    ]
    "AWS/NetworkFirewall" = [
      "DroppedPackets",
      "PassedPackets",
      "ReceivedPackets",
    ]
    "AWS/OpsWorks" = [
    ]
    "AWS/Polly" = [
      "2XXCount",
      "4XXCount",
      "5XXCount",
      "RequestCharacters",
      "ResponseLatency",
    ]
    "AWS/PrivateLinkEndpoints" = [
      "ActiveConnections",
      "BytesProcessed",
      "NewConnections",
      "PacketsDropped",
      "RstPacketsReceived",
    ]
    "AWS/PrivateLinkServices" = [
      "ActiveConnections",
      "BytesProcessed",
      "EndpointsCount",
      "NewConnections",
      "RstPacketsReceived",
    ]
    "AWS/Prometheus" = [
    ]
    "AWS/RDS" = [
      "ActiveTransactions",
      "AuroraBinlogReplicaLag",
      "AuroraReplicaLag",
      "AuroraReplicaLagMaximum",
      "AuroraReplicaLagMinimum",
      "BackupRetentionPeriodStorageUsed",
      "BinLogDiskUsage",
      "BlockedTransactions",
      "BufferCacheHitRatio",
      "BurstBalance",
      "CommitLatency",
      "CommitThroughput",
      "CPUCreditBalance",
      "CPUCreditUsage",
      "CPUSurplusCreditBalance",
      "CPUSurplusCreditsCharged",
      "CPUUtilization",
      "DatabaseConnections",
      "DBLoad",
      "DBLoadCPU",
      "DBLoadNonCPU",
      "DBLoadRelativeToNumVCPUs",
      "DDLLatency",
      "DDLThroughput",
      "Deadlocks",
      "DeleteLatency",
      "DeleteThroughput",
      "DiskQueueDepth",
      "DMLLatency",
      "DMLThroughput",
      "EngineUptime",
      "FailedSQLServerAgentJobsCount",
      "FreeableMemory",
      "InsertLatency",
      "InsertThroughput",
      "LoginFailures",
      "MaximumUsedTransactionIDs",
      "NetworkReceiveThroughput",
      "NetworkThroughput",
      "NetworkTransmitThroughput",
      "OldestReplicationSlotLag",
      "Queries",
      "RDSToAuroraPostgreSQLReplicaLag",
      "ReadIOPS",
      "ReadLatency",
      "ReadThroughput",
      "ReplicaLag",
      "ReplicationSlotDiskUsage",
      "ResultSetCacheHitRatio",
      "SelectLatency",
      "SelectThroughput",
      "SnapshotStorageUsed",
      "SwapUsage",
      "TotalBackupStorageBilled",
      "TransactionLogsDiskUsage",
      "TransactionLogsGeneration",
      "UpdateLatency",
      "UpdateThroughput",
      "VolumeBytesUsed",
      "VolumeReadIOPs",
      "VolumeWriteIOPs",
      "WriteIOPS",
      "WriteLatency",
      "WriteThroughput",
    ]
    "AWS/Redshift" = [
      "CommitQueueLength",
      "ConcurrencyScalingActiveClusters",
      "ConcurrencyScalingSeconds",
      "CPUUtilization",
      "DatabaseConnections",
      "HealthStatus",
      "MaintenanceMode",
      "MaxConfiguredConcurrencyScalingClusters",
      "NetworkReceiveThroughput",
      "NetworkTransmitThroughput",
      "PercentageDiskSpaceUsed",
      "QueriesCompletedPerSecond",
      "QueryDuration",
      "QueryRuntimeBreakdown",
      "ReadIOPS",
      "ReadLatency",
      "ReadThroughput",
      "TotalTableCount",
      "WLMQueueLength",
      "WLMQueueWaitTime",
      "WLMQueriesCompletedPerSecond",
      "WLMQueryDuration",
      "WLMRunningQueries",
      "WriteIOPS",
      "WriteLatency",
      "WriteThroughput",
      "SchemaQuota",
      "NumExceededSchemaQuotas",
      "StorageUsed",
      "PercentageQuotaUsed",
    ]
    "AWS/Rekognition" = [
      "DetectedFaceCount",
      "DetectedLabelCount",
      "ResponseTime",
      "ServerErrorCount",
      "SuccessfulRequestCount",
      "ThrottledCount",
      "UserErrorCount",
    ]
    "AWS/Robomaker" = [
    ]
    "AWS/Route53" = [
      "ChildHealthCheckHealthyCount",
      "ConnectionTime",
      "DNSQueries",
      "HealthCheckPercentageHealthy",
      "HealthCheckStatus",
      "SSLHandshakeTime",
      "TimeToFirstByte",
    ]
    "AWS/Route53Resolver" = [
      "EndpointHealthyENICount",
      "EndpointUnhealthyENICount",
      "FirewallRuleGroupQueryVolume",
      "FirewallRuleGroupVpcQueryVolume",
      "FirewallRuleQueryVolume",
      "InboundQueryVolume",
      "OutboundQueryAggregateVolume",
      "OutboundQueryVolume",
      "VpcFirewallQueryVolume",
    ]
    "AWS/S3" = [
      "4xxErrors",
      "5xxErrors",
      "AllRequests",
      "BucketSizeBytes",
      "BytesDownloaded",
      "BytesPendingReplication",
      "BytesUploaded",
      "DeleteRequests",
      "FirstByteLatency",
      "GetRequests",
      "HeadRequests",
      "ListRequests",
      "NumberOfObjects",
      "OperationsFailedReplication",
      "OperationsPendingReplication",
      "PostRequests",
      "PutRequests",
      "ReplicationLatency",
      "SelectBytesReturned",
    ]
    "AWS/SES" = [
      "Bounce",
      "Complaint",
      "Delivery",
      "Open",
      "Reject",
      "Reputation.BounceRate",
      "Reputation.ComplaintRate",
      "Send",
      "Subscription",
    ]
    "AWS/SNS" = [
      "NumberOfMessagesPublished",
      "NumberOfNotificationsDelivered",
      "NumberOfNotificationsFailed",
      "NumberOfNotificationsFilteredOut",
      "NumberOfNotificationsFilteredOut-MessageAttributes",
      "NumberOfNotificationsFilteredOut-InvalidAttributes",
      "PublishSize",
      "SMSSuccessRate",
    ]
    "AWS/SQS" = [
      "ApproximateAgeOfOldestMessage",
      "ApproximateNumberOfMessagesDelayed",
      "ApproximateNumberOfMessagesNotVisible",
      "ApproximateNumberOfMessagesVisible",
      "NumberOfEmptyReceives",
      "NumberOfMessagesDeleted",
      "NumberOfMessagesReceived",
      "NumberOfMessagesSent",
      "SentMessageSize",
    ]
    "AWS/SWF" = [
      "ActivityTasksCanceled",
      "ActivityTaskScheduleToCloseTime",
      "ActivityTaskScheduleToStartTime",
      "ActivityTasksCompleted",
      "ActivityTasksFailed",
      "ActivityTaskStartToCloseTime",
      "ConsumedCapacity",
      "DecisionTaskScheduleToStartTime",
      "DecisionTasksCompleted",
      "DecisionTaskStartToCloseTime",
      "PendingTasks",
      "ProvisionedBucketSize",
      "ProvisionedRefillRate",
      "ScheduledActivityTasksTimedOutOnClose",
      "ScheduledActivityTasksTimedOutOnStart",
      "StartedActivityTasksTimedOutOnClose",
      "StartedActivityTasksTimedOutOnHeartbeat",
      "StartedDecisionTasksTimedOutOnClose",
      "ThrottledEvents",
      "WorkflowsCanceled",
      "WorkflowsCompleted",
      "WorkflowsContinuedAsNew",
      "WorkflowsFailed",
      "WorkflowStartToCloseTime",
      "WorkflowsTerminated",
      "WorkflowsTimedOut",
    ]
    "AWS/SageMaker" = [
      "Invocation4XXErrors",
      "Invocation5XXErrors",
      "InvocationModelErrors",
      "Invocations",
      "InvocationsPerInstance",
      "ModelCacheHit",
      "ModelDownloadingTime",
      "ModelLatency",
      "ModelLoadingTime",
      "ModelLoadingWaitTime",
      "ModelSetupTime",
      "ModelUnloadingTime",
      "OverheadLatency",
    ]
    "AWS/SageMaker/LabelingJobs" = [
      "ActiveWorkers",
      "DatasetObjectsAutoAnnotated",
      "DatasetObjectsHumanAnnotated",
      "DatasetObjectsLabelingFailed",
      "JobsSucceeded",
      "TasksAccepted",
      "TasksDeclined",
      "TasksReturned",
      "TasksSubmitted",
      "TimeSpent",
      "TotalDatasetObjectsLabeled",
    ]
    "AWS/Sagemaker/ModelBuildingPipeline" = [
      "ExecutionDuration",
      "ExecutionFailed",
      "ExecutionStarted",
      "ExecutionStopped",
      "ExecutionSucceeded",
      "StepDuration",
      "StepFailed",
      "StepStarted",
      "StepStopped",
      "StepSucceeded",
    ]
    "AWS/Scheduler" = [
    ]
    "AWS/ServiceCatalog" = [
    ]
    "AWS/States" = [
      "ActivitiesFailed",
      "ActivitiesHeartbeatTimedOut",
      "ActivitiesScheduled",
      "ActivitiesStarted",
      "ActivitiesSucceeded",
      "ActivitiesTimedOut",
      "ActivityRunTime",
      "ActivityScheduleTime",
      "ActivityTime",
      "ExecutionsFailed",
      "ExecutionsStarted",
      "ExecutionsSucceeded",
      "ExecutionTime",
      "LambdaFunctionRunTime",
      "LambdaFunctionScheduleTime",
      "LambdaFunctionTime",
      "LambdaFunctionsFailed",
      "LambdaFunctionsScheduled",
      "LambdaFunctionsStarted",
      "LambdaFunctionsSucceeded",
      "LambdaFunctionsTimedOut",
    ]
    "AWS/StorageGateway" = [
      "CacheHitPercent",
      "CachePercentDirty",
      "CachePercentUsed",
      "CloudBytesDownloaded",
      "CloudBytesUploaded",
      "CloudDownloadLatency",
      "QueuedWrites",
      "ReadBytes",
      "ReadTime",
      "TimeSinceLastRecoveryPoint",
      "TotalCacheSize",
      "UploadBufferFree",
      "UploadBufferPercentUsed",
      "UploadBufferUsed",
      "WorkingStorageFree",
      "WorkingStoragePercentUsed",
      "WorkingStorageUsed",
      "WriteBytes",
      "WriteTime",
    ]
    "AWS/Textract" = [
      "ResponseTime",
      "ServerErrorCount",
      "SuccessfulRequestCount",
      "ThrottledCount",
      "UserErrorCount",
    ]
    "AWS/Timestream" = [
    ]
    "AWS/Transfer" = [
    ]
    "AWS/TransitGateway" = [
      "BytesIn",
      "BytesOut",
      "PacketDropCountBlackhole",
      "PacketDropCountNoRoute",
      "PacketsIn",
      "PacketsOut",
    ]
    "AWS/Translate" = [
      "CharacterCount",
      "ResponseTime",
      "ServerErrorCount",
      "SuccessfulRequestCount",
      "ThrottledCount",
      "UserErrorCount",
    ]
    "AWS/TrustedAdvisor" = [
      "GreenChecks",
      "RedChecks",
      "ServiceLimitUsage",
      "YellowChecks",
    ]
    "AWS/Usage" = [
    ]
    "AWS/VPN" = [
      "TunnelDataIn",
      "TunnelDataOut",
      "TunnelState",
    ]
    "AWS/WAFV2" = [
      "AllowedRequests",
      "BlockedRequests",
      "CountedRequests",
      "PassedRequests",
    ]
    "AWS/WorkSpaces" = [
      "Available",
      "ConnectionAttempt",
      "ConnectionFailure",
      "ConnectionSuccess",
      "InSessionLatency",
      "Maintenance",
      "SessionDisconnect",
      "SessionLaunchTime",
      "Stopped",
      "Unhealthy",
      "UserConnected",
    ]
    "AmazonMWAA" = [
      "CollectDBDags",
      "CriticalSectionBusy",
      "CriticalSectionDuration",
      "CriticalSectionQueryDuration",
      "DagBagSize",
      "DagCallbackExceptions",
      "DAGDependencyCheck",
      "DAGDurationFailed",
      "DAGDurationSuccess",
      "DAGFileProcessingLastDuration",
      "DAGFileProcessingLastNumOfDbQueriesNote",
      "DAGFileProcessingLastRunSecondsAgo",
      "DAGFileRefreshError",
      "DAGScheduleDelay",
      "ExceptionFailures",
      "FailedSLAEmailAttempts",
      "FirstTaskSchedulingDelay",
      "ImportErrors",
      "InfraFailures",
      "JobEnd",
      "TriggersFailed",
      "TriggersRunning",
      "TriggersSucceeded",
      "Updates",
      "ZombiesKilled",
    ]
    "CloudWatchSynthetics" = [
      "2xx",
      "4xx",
      "5xx",
      "Duration",
      "Error",
      "Failed",
      "Failed requests",
      "SuccessPercent",
      "VisualMonitoringSuccessPercent",
      "VisualMonitoringTotalComparisons",
    ]
    "ContainerInsights" = [
      "apiserver_admission_controller_admission_duration_seconds",
      "apiserver_admission_step_admission_duration_seconds",
      "apiserver_admission_webhook_admission_duration_seconds",
      "apiserver_current_inflight_requests",
      "apiserver_current_inqueue_requests",
      "apiserver_flowcontrol_rejected_requests_total",
      "apiserver_longrunning_requests",
      "apiserver_request_duration_seconds",
      "apiserver_request_total",
      "apiserver_request_total_5XX",
      "apiserver_requested_deprecated_apis",
      "apiserver_storage_list_duration_seconds",
      "apiserver_storage_objects",
      "apiserver_storage_size_bytes",
      "cluster_failed_node_count",
      "cluster_node_count",
      "container_cpu_utilization",
      "container_cpu_utilization_over_container_limit",
      "container_memory_failures_total",
      "container_memory_utilization",
      "container_memory_utilization_over_container_limit",
      "etcd_request_duration_seconds",
      "namespace_number_of_running_pods",
      "node_cpu_limit",
      "node_cpu_reserved_capacity",
      "node_cpu_usage_total",
      "node_cpu_utilization",
      "node_diskio_io_service_bytes_total",
      "node_diskio_io_serviced_total",
      "node_filesystem_inodes",
      "node_filesystem_inodes_free",
      "node_filesystem_utilization",
      "node_interface_network_rx_dropped",
      "node_interface_network_tx_dropped",
      "node_memory_limit",
      "node_memory_reserved_capacity",
      "node_memory_utilization",
      "node_memory_working_set",
      "node_network_total_bytes",
      "node_number_of_running_containers",
      "node_number_of_running_pods",
      "node_status_allocatable_pods",
      "node_status_capacity_pods",
      "node_status_condition_disk_pressure",
      "node_status_condition_memory_pressure",
      "node_status_condition_pid_pressure",
      "node_status_condition_ready",
      "node_status_condition_unknown",
      "pod_container_status_running",
      "pod_container_status_terminated",
      "pod_container_status_waiting",
      "pod_container_status_waiting_reason_crash_loop_back_off",
      "pod_container_status_waiting_reason_create_container_config_error",
      "pod_container_status_waiting_reason_create_container_error",
      "pod_container_status_waiting_reason_image_pull_error",
      "pod_container_status_waiting_reason_oom_killer",
      "pod_container_status_waiting_reason_start_error",
      "pod_cpu_limit",
      "pod_cpu_request",
      "pod_cpu_reserved_capacity",
      "pod_cpu_utilization",
      "pod_cpu_utilization_over_pod_limit",
      "pod_interface_network_rx_dropped",
      "pod_interface_network_tx_dropped",
      "pod_memory_limit",
      "pod_memory_request",
      "pod_memory_reserved_capacity",
      "pod_memory_utilization",
      "pod_memory_utilization_over_pod_limit",
      "pod_network_rx_bytes",
      "pod_network_tx_bytes",
      "pod_number_of_container_restarts",
      "pod_number_of_containers",
      "pod_number_of_running_containers",
      "pod_status_failed",
      "pod_status_pending",
      "pod_status_ready",
      "pod_status_running",
      "pod_status_scheduled",
      "pod_status_succeeded",
      "pod_status_unknown",
      "replicas_desired",
      "replicas_ready",
      "rest_client_request_duration_seconds",
      "rest_client_requests_total",
      "service_number_of_running_pods",
      "status_replicas_available",
      "status_replicas_unavailable",
    ]
    "ECS/ContainerInsights" = [
      "ContainerInstanceCount",
      "CpuReserved",
      "CpuUtilized",
      "DeploymentCount",
      "DesiredTaskCount",
      "MemoryReserved",
      "MemoryUtilized",
      "PendingTaskCount",
      "RunningTaskCount",
      "ServiceCount",
      "StorageReadBytes",
      "StorageWriteBytes",
      "TaskCount",
      "TaskSetCount",
    ]
    "Glue" = [
      "glue.ALL.disk.available_GB",
      "glue.ALL.disk.used.percentage",
      "glue.ALL.disk.used_GB",
      "glue.ALL.jvm.heap.usage",
      "glue.ALL.jvm.heap.used",
      "glue.ALL.memory.heap.available",
      "glue.ALL.memory.heap.used",
      "glue.ALL.memory.heap.used.percentage",
      "glue.ALL.memory.non-heap.available",
      "glue.ALL.memory.non-heap.percentage",
      "glue.ALL.memory.non-heap.used",
      "glue.ALL.memory.total.available",
      "glue.ALL.memory.total.used",
      "glue.ALL.memory.total.used.percentage",
      "glue.ALL.s3.filesystem.read_bytes",
      "glue.ALL.s3.filesystem.write_bytes",
      "glue.ALL.system.cpuSystemLoad",
      "glue.driver.BlockManager.disk.diskSpaceUsed_MB",
      "glue.driver.ExecutorAllocationManager.executors.numberAllExecutors",
      "glue.driver.ExecutorAllocationManager.executors.numberMaxNeededExecutors",
      "glue.driver.aggregate.bytesRead",
      "glue.driver.aggregate.elapsedTime",
      "glue.driver.aggregate.numCompletedStages",
      "glue.driver.aggregate.numCompletedTasks",
      "glue.driver.aggregate.numFailedTasks",
      "glue.driver.aggregate.numKilledTasks",
      "glue.driver.aggregate.recordsRead",
      "glue.driver.aggregate.shuffleBytesWritten",
      "glue.driver.aggregate.shuffleLocalBytesRead",
      "glue.driver.bytesRead",
      "glue.driver.bytesWritten",
      "glue.driver.disk.available_GB",
      "glue.driver.disk.used.percentage",
      "glue.driver.disk.used_GB",
      "glue.driver.filesRead",
      "glue.driver.filesWritten",
      "glue.driver.jvm.heap.usage",
      "glue.driver.jvm.heap.used",
      "glue.driver.memory.heap.available",
      "glue.driver.memory.heap.used",
      "glue.driver.memory.heap.used.percentage",
      "glue.driver.memory.non-heap.available",
      "glue.driver.memory.non-heap.percentage",
      "glue.driver.memory.non-heap.used",
      "glue.driver.memory.total.available",
      "glue.driver.memory.total.used",
      "glue.driver.memory.total.used.percentage",
      "glue.driver.partitionsRead",
      "glue.driver.recordsRead",
      "glue.driver.recordsWritten",
      "glue.driver.s3.filesystem.read_bytes",
      "glue.driver.s3.filesystem.write_bytes",
      "glue.driver.skewness.job",
      "glue.driver.skewness.stage",
      "glue.driver.streaming.batchProcessingTimeInMs",
      "glue.driver.streaming.numRecords",
      "glue.driver.system.cpuSystemLoad",
      "glue.driver.workerUtilization",
      "glue.error.ALL",
      "glue.succeed.ALL",
    ]
  }
}